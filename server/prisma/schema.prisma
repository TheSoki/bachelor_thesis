// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "./generated/prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid(2))
  createdAt DateTime @default(now())
  name      String
  email     String   @unique
  password  String
  devices   Device[]

  @@index([name(ops: raw("gin_trgm_ops")), email(ops: raw("gin_trgm_ops"))], type: Gin, name: "User_search_idx")
}

model Device {
  id         String    @id @default(cuid(2))
  createdAt  DateTime  @default(now())
  token      String    @default(cuid(2))
  buildingId String
  roomId     String
  lastSeen   DateTime?
  author     User      @relation(fields: [authorId], references: [id])
  authorId   String

  @@index([buildingId(ops: raw("gin_trgm_ops")), roomId(ops: raw("gin_trgm_ops"))], type: Gin, name: "Device_search_idx")
}

model AuditLog {
  id        String   @id @default(cuid(2))
  index     Int      @unique @default(autoincrement())
  userId    String?
  operation String
  timestamp DateTime @default(now())
  userIp    String?
  error     String?

  @@index([timestamp(order: Desc)])
}
